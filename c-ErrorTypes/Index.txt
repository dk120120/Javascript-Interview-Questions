The following are the types of errors in JavaScript:

1.Syntax error - The error occurs when you use a predefined syntax incorrectly.
const func = () =>
console.log(hello)
}

Output:
}
^
SyntaxError: Unexpected token }
In the above example, an opening bracket is missing in the code, which invokes the Syntax error constructor.

2.Reference Error - In a case where a variable reference can't be found or hasn't been declared, then a Reference error occurs.
console.log(x);
Output:
console.log(x);
            ^
ReferenceError: x is not defined

3.Type Error - An error occurs when a value is used outside the scope of its data type.
let num = 15;
console.log(num.split("")); //converts a number to an array
Output:
console.log(num.split("")); //converts a number to an array
                ^
TypeError: num.split is not a function

4.URI Error - When the wrong character(s) are used in a URI function, the error is called.
console.log(decodeURI("https://www.educative.io/shoteditor"))

console.log(decodeURI("%sdfk"));

Output:
console.log(decodeURI("%sdfk"));
            ^
URIError: URI malformed

5.Internal Error - In the JS engine, this error occurs most often when there is too much data and the stack exceeds its critical size. When there are too many recursion patterns, switch cases, etc., the JS engine gets overwhelmed.

switch(condition) {
 case 1:
 ...
 break
 case 2:
 ...
 break
 ... up to 500 cases
 }
Output: Its output will be like InternalError.